#pragma once

// DO NOT EDIT THIS FILE! It is automatically generated by tools/meta.go

static void register_generated_reflection() {
	entt::meta<vec2f>()
		.data<&vec2f::x>("x"_hs)
			.prop("tooltip"_hs, "X"sv)
		.data<&vec2f::y>("y"_hs)
			.prop("tooltip"_hs, "Y"sv);
	entt::meta<vec3f>()
		.data<&vec3f::x>("x"_hs)
			.prop("tooltip"_hs, "X"sv)
		.data<&vec3f::y>("y"_hs)
			.prop("tooltip"_hs, "Y"sv)
		.data<&vec3f::z>("z"_hs)
			.prop("tooltip"_hs, "Z"sv);
	entt::meta<vec4f>()
		.data<&vec4f::x>("x"_hs)
			.prop("tooltip"_hs, "X"sv)
		.data<&vec4f::y>("y"_hs)
			.prop("tooltip"_hs, "Y"sv)
		.data<&vec4f::z>("z"_hs)
			.prop("tooltip"_hs, "Z"sv)
		.data<&vec4f::w>("w"_hs)
			.prop("tooltip"_hs, "W"sv);
	entt::meta<Player>()
		.data<&Player::possessionId>("possessionId"_hs)
			.prop("tooltip"_hs, "PossessionId"sv);
	entt::meta<GroundedPlayerMove>()
		.data<&GroundedPlayerMove::gravity>("gravity"_hs)
			.prop("tooltip"_hs, "Gravity"sv)
		.data<&GroundedPlayerMove::walkSpeed>("walkSpeed"_hs)
			.prop("tooltip"_hs, "WalkSpeed"sv)
		.data<&GroundedPlayerMove::runSpeed>("runSpeed"_hs)
			.prop("tooltip"_hs, "RunSpeed"sv)
		.data<&GroundedPlayerMove::fwdSpeed>("fwdSpeed"_hs)
			.prop("tooltip"_hs, "FwdSpeed"sv)
		.data<&GroundedPlayerMove::sideSpeed>("sideSpeed"_hs)
			.prop("tooltip"_hs, "SideSpeed"sv)
		.data<&GroundedPlayerMove::airSpeedCap>("airSpeedCap"_hs)
			.prop("tooltip"_hs, "AirSpeedCap"sv)
		.data<&GroundedPlayerMove::airAccel>("airAccel"_hs)
			.prop("tooltip"_hs, "AirAccel"sv)
		.data<&GroundedPlayerMove::maxAirSpeed>("maxAirSpeed"_hs)
			.prop("tooltip"_hs, "MaxAirSpeed"sv)
		.data<&GroundedPlayerMove::accel>("accel"_hs)
			.prop("tooltip"_hs, "Accel"sv)
		.data<&GroundedPlayerMove::friction>("friction"_hs)
			.prop("tooltip"_hs, "Friction"sv)
		.data<&GroundedPlayerMove::frictionCutoff>("frictionCutoff"_hs)
			.prop("tooltip"_hs, "FrictionCutoff"sv)
		.data<&GroundedPlayerMove::jumpSpeed>("jumpSpeed"_hs)
			.prop("tooltip"_hs, "JumpSpeed"sv)
		.data<&GroundedPlayerMove::stopSpeed>("stopSpeed"_hs)
			.prop("tooltip"_hs, "StopSpeed"sv)
		.data<&GroundedPlayerMove::groundTick>("groundTick"_hs)
			.prop("tooltip"_hs, "GroundTick"sv);
	entt::meta<FlyPlayerMove>()
		.data<&FlyPlayerMove::speed>("speed"_hs)
			.prop("tooltip"_hs, "Speed"sv);
	entt::meta<Input>()
		.data<&Input::cursor>("cursor"_hs)
			.prop("tooltip"_hs, "Cursor"sv)
		.data<&Input::cursorDelta>("cursorDelta"_hs)
			.prop("tooltip"_hs, "CursorDelta"sv)
		.data<&Input::move>("move"_hs)
			.prop("tooltip"_hs, "Move"sv)
		.data<&Input::lean>("lean"_hs)
			.prop("tooltip"_hs, "Lean"sv)
		.data<&Input::menu>("menu"_hs)
			.prop("tooltip"_hs, "Menu"sv);
	entt::meta<Material>()
		.data<&Material::baseColorFactor>("baseColorFactor"_hs)
			.prop("tooltip"_hs, "BaseColorFactor"sv)
		.data<&Material::emissiveFactor>("emissiveFactor"_hs)
			.prop("tooltip"_hs, "EmissiveFactor"sv)
		.data<&Material::diffuseFactor>("diffuseFactor"_hs)
			.prop("tooltip"_hs, "DiffuseFactor"sv)
		.data<&Material::specularFactor>("specularFactor"_hs)
			.prop("tooltip"_hs, "SpecularFactor"sv)
		.data<&Material::workflow>("workflow"_hs)
			.prop("tooltip"_hs, "Workflow"sv)
		.data<&Material::baseColorTextureSet>("baseColorTextureSet"_hs)
			.prop("tooltip"_hs, "BaseColorTextureSet"sv)
		.data<&Material::physicalDescriptorTextureSet>("physicalDescriptorTextureSet"_hs)
			.prop("tooltip"_hs, "PhysicalDescriptorTextureSet"sv)
		.data<&Material::normalTextureSet>("normalTextureSet"_hs)
			.prop("tooltip"_hs, "NormalTextureSet"sv)
		.data<&Material::occlusionTextureSet>("occlusionTextureSet"_hs)
			.prop("tooltip"_hs, "OcclusionTextureSet"sv)
		.data<&Material::emissiveTextureSet>("emissiveTextureSet"_hs)
			.prop("tooltip"_hs, "EmissiveTextureSet"sv)
		.data<&Material::metallicFactor>("metallicFactor"_hs)
			.prop("tooltip"_hs, "MetallicFactor"sv)
		.data<&Material::roughnessFactor>("roughnessFactor"_hs)
			.prop("tooltip"_hs, "RoughnessFactor"sv)
		.data<&Material::alphaMask>("alphaMask"_hs)
			.prop("tooltip"_hs, "AlphaMask"sv)
		.data<&Material::alphaMaskCutoff>("alphaMaskCutoff"_hs)
			.prop("tooltip"_hs, "AlphaMaskCutoff"sv);

}
